name: Publish scoverage summary
author: Eshu
description: Publish scoverage summaries generated by sbt-scoverage-summary plugin as a pull request comment

inputs:
  GITHUB_TOKEN:
    description: secrets.GITHUB_TOKEN
    required: true
  summary-file:
    description: Summary filename
    required: false
    default: scoverage-summary.md
  report-path:
    description: Coverage archive filename
    required: false
    default: scoverage-report
  retention-days:
    description: Artifact retention (days, 1â€“90)
    required: false
    default: "3"

runs:
  using: composite
  steps:
    - name: Create scoverage summary
      if: ${{ github.event.pull_request }}
      shell: bash
      run: |
        set -euo pipefail
        shopt -s globstar
        echo "# ${{ github.event.pull_request.head.sha }}" > "${{ inputs.summary-file }}"
        cat $(ls ./**/target/**/scoverage-summary/gfm.md | sort) >> "${{ inputs.summary-file }}"
    - name: Collect reports
      shell: bash
      run: |
        set -euo pipefail
        rm -rf "${{ inputs.report-path }}"
        mkdir -p "${{ inputs.report-path }}"
        mapfile -d '' dirs < <(find . -type d -path '*/target/*/scoverage-report' -print0)
        (( ${#dirs[@]} )) || { echo "No scoverage-report directories found"; exit 1; }  
        for d in "${dirs[@]}"; do
          rel="${d#./}"
          out="${{ inputs.report-path }}/$(printf %s "$rel" | sed -E 's#(^|/)target/#\1#')"
          mkdir -p "$out"
          rsync -a --delete "$d/" "$out/"
          echo "Copied: $d -> $out"
        done
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v4
      with:
        name: scoverage-report
        path: ${{ inputs.report-path }}
        retention-days: ${{ inputs.retention-days }}
    - name: Publish scoverage summary
      if: ${{ github.event.pull_request }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      run: |
        if [ -z "${GITHUB_TOKEN:-}" ]; then
          echo "GitHub token undefined or empty" >&2
          exit 1
        fi
        {
          echo
          echo "[Download full HTML report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)"
        } >> "${{ inputs.summary-file }}"
        gh pr comment "${{ github.event.pull_request.number }}" --body-file ${{ inputs.summary-file }}
